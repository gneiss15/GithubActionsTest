# Do a commit every "n" Days to keep actions alive
# Adjust "n" by changing "NoOfDays" inside "Check Days"
name: KeepActionsAlive

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Every Day at 00:00 CET

jobs:
  linux:
    runs-on: ubuntu-latest

    #permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
    #  contents: write

    steps:
    - name: Clone the repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
        token: '${{ secrets.PAT }}'

    - name: Check Days
      run: |
        NoOfDays=60
        TagFile="./.github/workflows/LastDayOfYear"
        if [ -f $TagFile ]; then
          LastDayOfYear=$(cat $TagFile)
         else
          LastDayOfYear=$(date +"%j")
        fi
        CurrentDayOfYear=$(date +"%j")
        if [ $CurrentDayOfYear -lt $LastDayOfYear ]; then
          DaysInPrevYear=$(date -d "$(($(date +"%Y")-1))-12-31" +"%j")
         else
          DaysInPrevYear=0
        fi
        DaysGone=$(($CurrentDayOfYear + $DaysInPrevYear - $LastDayOfYear))
        if [ $DaysGone -lt $NoOfDays ]; then
          echo "DaysGone ($DaysGone) -lt NoOfDays ($NoOfDays)"
          exit 0;
        fi
        echo "DaysGone: $DaysGone, CurrentDayOfYear: $CurrentDayOfYear"
        echo "$CurrentDayOfYear" >$TagFile

    - name: Commit all changed files back to the repository
      uses: stefanzweifel/git-auto-commit-action@v5
        # Optional commit user and author settings
        #commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
        #commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
        #commit_author: Author <actions@github.com> # defaults to "username <numeric_id+username@users.noreply.github.com>", where "numeric_id" and "username" belong to the author of the commit that triggered the run

        # Optional. Commit message for the created commit.
        # Defaults to "Apply automatic changes"
        #commit_message: Auto updating LastDayOfYear.txt

        # Optional. Local and remote branch name where commit is going to be pushed
        #  to. Defaults to the current branch.
        #  You might need to set `create_branch: true` if the branch does not exist.
        #branch: feature-123

        # Optional. Options used by `git-commit`.
        # See https://git-scm.com/docs/git-commit#_options
        #commit_options: '--no-verify --signoff'

        # Optional glob pattern of files which should be added to the commit
        # Defaults to all (.)
        # See the `pathspec`-documentation for git
        # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
        # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
        #file_pattern: '*.php src/*.js tests/*.js'

        # Optional. Local file path to the repository.
        # Defaults to the root of the repository.
        #repository: .

        # Optional. Tag name being created in the local repository and 
        # pushed to remote repository and defined branch.
        #tagging_message: 'v1.0.0'

        # Optional. Option used by `git-status` to determine if the repository is 
        # dirty. See https://git-scm.com/docs/git-status#_options
        #status_options: '--untracked-files=no'

        # Optional. Options used by `git-add`.
        # See https://git-scm.com/docs/git-add#_options
        #add_options: '-u'

        # Optional. Options used by `git-push`.
        # See https://git-scm.com/docs/git-push#_options
        #push_options: '--force'
    
        # Optional. Disable dirty check and always try to create a commit and push
        #skip_dirty_check: true    
    
        # Optional. Skip internal call to `git fetch`
        #skip_fetch: true    
    
        # Optional. Skip internal call to `git checkout`
        #skip_checkout: true

        # Optional. Prevents the shell from expanding filenames. 
        # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
        #disable_globbing: true

        # Optional. Create given branch name in local and remote repository.
        #create_branch: true

        # Optional. Creates a new tag and pushes it to remote without creating a commit. 
        # Skips dirty check and changed files. Must be used with `tagging_message`.
        #create_git_tag_only: false
